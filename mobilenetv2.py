# -*- coding: utf-8 -*-
"""MobileNetV2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jTaP8lMA-oX65xkMCCYS9LiHjDpWi1-p
"""

import tensorflow as tf
import tensorflow_datasets as tfds

"""**參數設定與載入資料**"""

from pickle import TRUE
num_epoch = 5
batch_sizze  = 19
learning_rate = 0.001

dataset = tfds.load("tf_flowers",split=tfds.Split.TRAIN,as_supervised=TRUE)
dataset = dataset.map(lambda img,label: (tf.image.resize(img,(224,224))/255.0, label)).shuffle(1024).batch(batch_sizze)

"""**訓練模型**"""

from keras.applications.efficientnet import training
model = tf.keras.applications.MobileNetV2(weights=None,classes=5)
optimizer = tf.keras.optimizers.Adam(learning_rate=learning_rate)

for e in range(num_epoch):
  for images,labels in dataset:
    with tf.GradientTape() as tape:
      labels_pred = model(images, training=True)
      loss = tf.keras.losses.sparse_categorical_crossentropy(y_true=labels,y_pred=labels_pred)
      loss = tf.reduce_mean(loss)
      print("loss %f" % loss.numpy())
    grads = tape.gradient(loss, model.trainable_variables)
    optimizer.apply_gradients(grads_and_vars=zip(grads,model.trainable_variables))
  print(labels_pred)
  optimizer.apply_gradients(grads_and_vars=zip(grads,model.trainable_variables))